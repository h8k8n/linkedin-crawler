spring:
  application:
    name: gateway-service
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
  main:
    web-application-type: reactive
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin, RETAIN_FIRST
        - DedupeResponseHeader=Vary, RETAIN_FIRST
        - DedupeResponseHeader=Access-Control-Allow-Credentials, RETAIN_FIRST
      routes:
        - id: crawler-module
          uri: lb://crawler-module
          predicates:
            - Path=/api/crawling/**
          filters:
            #- RewritePath=/api/crawling/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Gateway-Auth, ${gateway.auth.token}
        - id: information-extraction-module
          uri: lb://information-extraction-module
          predicates:
            - Path=/api/linkedin-profile/**
          filters:
            #- RewritePath=/api/crawling/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Gateway-Auth, ${gateway.auth.token}
        - id: linkedin-account-module
          uri: lb://linkedin-account-module
          predicates:
            - Path=/api/linkedin-account/**
          filters:
            #- RewritePath=/api/crawling/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Gateway-Auth, ${gateway.auth.token}
        - id: proxy-server-module
          uri: lb://proxy-server-module
          predicates:
            - Path=/api/proxy-server/**
          filters:
            #- RewritePath=/api/crawling/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Gateway-Auth, ${gateway.auth.token}
        - id: security-module
          uri: lb://security-module
          predicates:
            - Path=/api/security/**
          filters:
            #- RewritePath=/api/crawling/(?<segment>.*), /$\{segment}
            - AddRequestHeader=X-Gateway-Auth, ${gateway.auth.token}
      discovery:
        locator:
          enabled: true
  mvc:
    cors:
      allowed-origins: http://localhost:5173
      allowed-headers: '*'
      allowed-methods: GET,POST,PUT,DELETE
  web:
    cors:
      api:
        path-pattern: /api/**
  elasticsearch:
    uris: http://localhost:9200
server:
  port: 8888
eureka:
  client:
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
management:
  endpoints:
    web:
      exposure:
        include: "*"
gateway:
  auth:
    token: 3ff5617816af5572361077e980d9e4c1a1f1b5a533caa4fe5d359df3511eb507
    enabled: true
    exclude-paths:
      - /api/security/auth
      - /api/security/register

jwt:
  token:
    prefix: Bearer
    secret: 25d9c0e2e11ff6c3cd3769483a0b57664d76b933c428622b026ff52ff8a37fb2
    expiration: 86400000
logging:
  level:
    root: INFO
  file:
    name: myapp.log
    max-size: 10MB
    max-history: 10
  pattern:
    console: "%d %-5level %logger : %msg%n"
    file: "%d %-5level [%thread] %logger : %msg%n"
springdoc:
  enable-native-support: true
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui/index.html
    config-url: /v3/api-docs/swagger-config
    urls:
      - url: /v3/api-docs
        name: API Gateway Service
        primaryName: API Gateway Service
      - url: /swagger-ui/crawling/v3/api-docs
        name: Crawling module
        primaryName: Crawling module
      - url: /swagger-ui/linkedin-profile/v3/api-docs
        name: Information Extraction Module
        primaryName: Linkedin Account Module
      - url: /swagger-ui/linkedin-account/v3/api-docs
        name: Linkedin Account Module
        primaryName: Linkedin Account Module
      - url: /swagger-ui/proxy-server/v3/api-docs
        name: Proxy Server
        primaryName: Proxy Server
      - url: /swagger-ui/security/v3/api-docs
        name: Security
        primaryName: Security